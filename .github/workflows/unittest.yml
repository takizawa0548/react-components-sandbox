name: UnitTtest CI
on: push
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node_modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.node_modules-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install
  unit-test:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        shardIndex: [1, 2, 3]
        shardTotal: [3]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: node_modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Cache playwright binaries
        uses: actions/cache/restore@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Test_Storybook
        run: |
          npx concurrently -k -s first -n "SB,TEST" -c "magenta,blue" "npm run build-storybook -- --quiet && npx serve storybook-static -l 6006" "wait-on tcp:6006 && npm run test-storybook -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}"
          mv ~/coverage/storybook/coverage-storybook.json ~/coverage/storybook/${{ matrix.shardIndex }}-${{ matrix.shardTotal }}/coverage-storybook-${{ matrix.shardIndex }}-${{ matrix.shardTotal }}.json
      - name: Cache coverage storybook
        uses: actions/cache/save@v4
        with:
          path: |
            ~/coverage/storybook/${{ matrix.shardIndex }}-${{ matrix.shardTotal }}/coverage-storybook-${{ matrix.shardIndex }}.json
          key: ${{ runner.os }}-coverage-storybook-${{ matrix.shardIndex }}-${{ github.run_id }}
  coverage:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: node_modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Cache coverage storybook 1
        uses: actions/cache/save@v4
        with:
          path: |
            ~/coverage/storybook/1-3/coverage-storybook-1.json
          key: ${{ runner.os }}-coverage-storybook-1-${{ github.run_id }}
      - name: Cache coverage storybook 2
        uses: actions/cache/save@v4
        with:
          path: |
            ~/coverage/storybook/2-3/coverage-storybook-2.json
          key: ${{ runner.os }}-coverage-storybook-2-${{ github.run_id }}
      - name: Cache coverage storybook 3
        uses: actions/cache/save@v4
        with:
          path: |
            ~/coverage/storybook/3-3/coverage-storybook-3.json
          key: ${{ runner.os }}-coverage-storybook-3-${{ github.run_id }}
      - name: coverage report
        run: |
          mkdir ~/coverage/storybook/merged
          mv ~/coverage/storybook/1-3/coverage-storybook-1.json ~/coverage/storybook/merged/coverage-storybook-1.json
          mv ~/coverage/storybook/2-3/coverage-storybook-2.json ~/coverage/storybook/merged/coverage-storybook-2.json
          mv ~/coverage/storybook/3-3/coverage-storybook-3.json ~/coverage/storybook/merged/coverage-storybook-3.json
          ls -la ~/coverage/storybook/merged
          npx nyc merge ~/coverage/storybook/merged --out=~/coverage/storybook/coverage-storybook.json
          ls -la ~/coverage/storybook
          npm run coverage-report
      - name: Upload coverage
        uses: actions/upload-artifact@v2
        with:
          path: coverage/storybook/coverage-storybook.json
          name: coverage
